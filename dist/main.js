(()=>{"use strict";var e={192:(e,n,t)=>{t.d(n,{Z:()=>g});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),A=t(667),c=t.n(A),s=new URL(t(388),t.b),l=new URL(t(11),t.b),d=new URL(t(522),t.b),u=new URL(t(356),t.b),p=i()(o()),m=c()(s),f=c()(l),h=c()(d),C=c()(u);p.push([e.id,'@font-face{font-family:"Abel";src:url('+m+') format("truetype")}@font-face{font-family:"Fascinate";src:url('+f+') format("truetype")}:root{--yellow: #F9E784;--taupe: #896A67;--black: #13070C;--light-black: #13070c66;--eggplant: #6B4D57;--blue: #AFC2D5;--primary-background-color: var(--yellow);--primary-font-color: var(--black);font-family:Abel,sans-serif}*{box-sizing:border-box}html{height:100%;color:var(--black)}h1,h2{text-align:center}h1{font-family:Fascinate,serif;font-size:3rem}.nacho-button{font-family:Abel,sans-serif;font-weight:bold;background-image:url('+h+");background-color:rgba(0,0,0,0);background-size:contain;border:none;flex:1 1 0;font-size:1.2rem;aspect-ratio:1/1;transform:translateY(-40%);transition:ease-in-out .5s;border-radius:49% 51% 49% 51%/12% 11% 89% 88%}.nacho-button:hover,.nacho-button:focus-visible{transform:translateY(-5%)}body{background-image:url("+C+");background-size:cover;background-repeat:no-repeat;background-attachment:fixed;padding:0;margin:0}#nav-bar{grid-column-start:2;margin-bottom:-25%}nav{display:flex;width:100%}.card{background-color:var(--primary-background-color);width:100%;grid-column-start:2;margin-block:2.5rem;min-height:20rem;padding:1rem;border-block:.4rem var(--eggplant) solid}.menu_item+.menu_item{margin-block:1rem;padding-top:1rem;border-top:1px solid var(--light-black)}.menu_item_description{padding-inline:1rem}.menu_item_image{max-width:100%;border-radius:.5rem;border:solid .2rem var(--taupe)}@media(min-width: 600px){body{display:grid;grid-template-columns:1fr minmax(600px, 1.5fr) 1fr;justify-items:center}#nav-bar{width:600px}.card{border-radius:1rem;border-inline:.4rem var(--eggplant) solid}.menu_item{display:grid;grid-template-columns:1fr 2fr;gap:.5rem}.menu_item_image{grid-row:span 2;place-self:center}}","",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAAA,WACE,kBAAA,CACA,8DAAA,CAEF,WACE,uBAAA,CACA,8DAAA,CAGF,MAEE,iBAAA,CACA,gBAAA,CACA,gBAAA,CACA,wBAAA,CACA,mBAAA,CACA,eAAA,CACA,yCAAA,CACA,kCAAA,CACA,2BAAA,CAGF,EACE,qBAAA,CAGF,KACE,WAAA,CACA,kBAAA,CAGF,MACE,iBAAA,CAGF,GACE,2BAAA,CACA,cAAA,CAGF,cACE,2BAAA,CACA,gBAAA,CACA,wDAAA,CACA,8BAAA,CACA,uBAAA,CACA,WAAA,CACA,UAAA,CACA,gBAAA,CACA,gBAAA,CACA,0BAAA,CACA,0BAAA,CACA,6CAAA,CAEA,gDAEE,yBAAA,CAKJ,KACE,wDAAA,CACA,qBAAA,CACA,2BAAA,CACA,2BAAA,CACA,SAAA,CACA,QAAA,CAGF,SACE,mBAAA,CACA,kBAAA,CAGF,IACE,YAAA,CACA,UAAA,CAGF,MACE,gDAAA,CACA,UAAA,CACA,mBAAA,CACA,mBAAA,CACA,gBAAA,CACA,YAAA,CACA,wCAAA,CAKA,sBACE,iBAAA,CACA,gBAAA,CACA,uCAAA,CAGF,uBACE,mBAAA,CAEF,iBACE,cAAA,CACA,mBAAA,CACA,+BAAA,CAIJ,yBACE,KACE,YAAA,CACA,kDAAA,CACA,oBAAA,CAGF,SACE,WAAA,CAGF,MACE,kBAAA,CACA,yCAAA,CAGF,WACE,YAAA,CACA,6BAAA,CACA,SAAA,CAEA,iBACE,eAAA,CACA,iBAAA,CAAA",sourcesContent:["@font-face {\n  font-family: 'Abel';\n  src: url('./fonts/Abel-Regular.ttf') format('truetype');\n}\n@font-face {\n  font-family: 'Fascinate';\n  src: url('./fonts/FascinateInline-Regular.ttf') format('truetype');\n}\n\n:root {\n  /* Colors */\n  --yellow: #F9E784;\n  --taupe: #896A67;\n  --black: #13070C;\n  --light-black: #13070c66;\n  --eggplant: #6B4D57;\n  --blue: #AFC2D5;\n  --primary-background-color: var(--yellow);\n  --primary-font-color: var(--black);\n  font-family: Abel, sans-serif;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  height: 100%;\n  color: var(--black);\n}\n\nh1, h2 {\n  text-align: center;\n}\n\nh1 {\n  font-family: Fascinate, serif;\n  font-size: 3rem;\n}\n\n.nacho-button {\n  font-family: Abel, sans-serif;\n  font-weight: bold;\n  background-image: url('./images/nacho-transparent.png');\n  background-color: transparent;\n  background-size: contain;\n  border: none;\n  flex: 1 1 0;\n  font-size: 1.2rem;\n  aspect-ratio: 1/1;\n  transform: translateY(-40%);\n  transition: ease-in-out .5s;\n  border-radius: 49% 51% 49% 51% / 12% 11% 89% 88%;\n\n  &:hover,\n  &:focus-visible {\n    transform: translateY(-5%);\n  }\n}\n\n\nbody {\n  background-image: url('./images/nachos-background.jpg');\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  padding: 0;\n  margin: 0;\n}\n\n#nav-bar {\n  grid-column-start: 2;\n  margin-bottom: -25%;\n}\n\nnav {\n  display: flex;\n  width: 100%;\n}\n\n.card {\n  background-color: var(--primary-background-color);\n  width: 100%;\n  grid-column-start: 2;\n  margin-block: 2.5rem;\n  min-height: 20rem;\n  padding: 1rem;\n  border-block: .4rem var(--eggplant) solid;\n}\n\n.menu_item {\n\n  &+.menu_item{\n    margin-block: 1rem;\n    padding-top: 1rem;\n    border-top: 1px solid var(--light-black);\n  }\n\n  &_description {\n    padding-inline: 1rem;\n  }\n  &_image {\n    max-width: 100%;\n    border-radius: .5rem;\n    border: solid .2rem var(--taupe);\n  }\n}\n\n@media (min-width: 600px) {\n  body {\n    display: grid;\n    grid-template-columns: 1fr minmax(600px, 1.5fr) 1fr;\n    justify-items: center;\n  }\n\n  #nav-bar {\n    width: 600px;\n  }\n\n  .card {\n    border-radius: 1rem;\n    border-inline: .4rem var(--eggplant) solid;\n  }\n\n  .menu_item {\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    gap: .5rem;\n\n    &_image {\n      grid-row: span 2;\n      place-self: center;\n    }\n  }\n}\n"],sourceRoot:""}]);const g=p},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],A=0;A<e.length;A++){var c=e[A],s=r.base?c[0]+r.base:c[0],l=a[s]||0,d="".concat(s," ").concat(l);a[s]=l+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=o(p,r);r.byIndex=A,n.splice(A,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var A=t(a[i]);n[A].references--}for(var c=r(e,o),s=0;s<a.length;s++){var l=t(a[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},388:(e,n,t)=>{e.exports=t.p+"3843f456cf56d275baf6.ttf"},11:(e,n,t)=>{e.exports=t.p+"8c324f34f849addff0f9.ttf"},522:(e,n,t)=>{e.exports=t.p+"9d6085b8a43e74d80bb2.png"},356:(e,n,t)=>{e.exports=t.p+"b1acd95c84e0c9742b94.jpg"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),i=t.n(a),A=t(565),c=t.n(A),s=t(216),l=t.n(s),d=t(589),u=t.n(d),p=t(192),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f=(e,n="",t=!1,r=!1)=>{const o=document.createElement(e);return o.innerText=n,t&&o.setAttribute("id",t),r&&o.classList.add(r),o};function h(e){e.appendChild(f("h1","Midwest Marty's Fully Loaded Nacho Emporium")),e.appendChild(f("h2","Welcome!")),e.appendChild(f("p","Come on down to the Fully Loaded Nacho Emporium. The only family-friendly, fully-loaded, nacho establishment in the greater metropolitan area that doesn't require you to be Fully Loaded")),e.appendChild(f("h2","Rules:")),e.appendChild(((e,n=!1)=>{const t=f(n?"ol":"ul");return e.forEach((e=>{const n=f("li",e);t.appendChild(n)})),t})(["Have Fun","If you order nachos to share, one person can't just eat all of the fully loaded nachos. Basically, if two people order nachos to share, one person can't take the ones with meat and stuff."]))}const C=t.p+"d50d66fbf4742afb26e2.jpeg",g=t.p+"e5eaa0e91c25c949c231.jpg",b=t.p+"9cd30961ac31f4931e9d.jpg",y=t.p+"81d142bb28fb1cef8b53.jpg";class v{constructor(e,n,t){this.name=e,this.image=n,this.description=t}}const w=document.getElementById("content");w.classList.add("card"),function(){const e=document.getElementById("nav-bar");console.log(e);const n=f("nav");n.appendChild(f("button","Home","home","nacho-button")),n.appendChild(f("button","Menu","menu","nacho-button")),n.appendChild(f("button","About","about","nacho-button")),n.appendChild(f("button","Contact","contact","nacho-button")),e.appendChild(n)}(),h(w);const B=document.querySelectorAll("nav>button");let x=new class{home(){this.clear(),h(w)}menu(){this.clear(),function(e){const n=[];n.push(new v("The Classic Fully-Loaded Nachos",g,"The Nachos your grandparents used to enjoy. We have been serving this recipe for nigh on 80 years now, and see no reason to mess with perfection.")),n.push(new v("The Fully-Loaded Broiler",C,"A simple twist on the classic taste. Need your nachos and fixins to be a little more done, you can't go wrong with a good broil.")),n.push(new v("The Fully-Loaded Nacho Bowl",y,"Sometimes you want the taste of the nachos, but without the investment of a full platter. We have you covered with the bowl. A great way to get your nacho fix on the go.")),n.push(new v("The Fully-Unloaded Nachos",b,"For those with a little more gumption than hunger, we offer this oppurtunity to construct your Fully-Loaded experience. Come in and enjoy a buffet bar of fixins where you can create the nachos that used to only exist in your dreams.")),e.appendChild(f("h1","Our Menu")),n.forEach((n=>{const t=f("div","",!1,"menu_item");t.appendChild(((e,n=!1)=>{let t=new Image;return t.src=e,n&&t.classList.add(n),t})(n.image,"menu_item_image")),t.appendChild(f("h2",n.name,n.name,"menu_item_name")),t.appendChild(f("p",n.description,!1,"menu_item_description")),e.appendChild(t)}))}(w)}about(){this.clear()}contact(){this.clear()}clear(){for(;w.firstChild;)w.firstChild.remove()}};B.forEach((e=>{e.addEventListener("click",(()=>{x[e.id]()}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,